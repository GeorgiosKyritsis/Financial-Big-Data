list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
df = data.frame(goals = c(42.7, 38.1, 33.9, 24.6, 2.3, -1.9, -4.9), points = c(82, 77, 74, 67, 53, 51, 49))
p <- ggplot(data = df, aes(x = goals, y = points)) +
geom_smooth(method = "lm", se=FALSE, color="green", formula = y ~ x) +
geom_point()
p
p1 <- p + geom_text(x = 25, y = 300, label = lm_eqn(df), parse = TRUE)
p1
library(ggplot2)
library(ggpmisc)
df <- data.frame(x = c(1:100))
df$y <- 2 + 3 * df$x + rnorm(100, sd = 40)
my.formula <- y ~ x
p <- ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = my.formula) +
stat_poly_eq(formula = my.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
geom_point()
p
library(ggplot2)
library(ggpmisc)
df <- data.frame(x = c(1:100))
df$y <- 2 + 3 * df$x + rnorm(100, sd = 40)
my.formula <- y ~ x
p <- ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = my.formula) +
stat_poly_eq(formula = my.formula,
eq.with.lhs = "italic(hat(y))~`=`~",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
geom_point()
p
library(ggplot2)
library(ggpmisc)
df <- data.frame(x = c(1:100))
df$y <- 2 + 3 * df$x + rnorm(100, sd = 40)
my.formula <- y ~ x
p <- ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = my.formula) +
stat_poly_eq(formula = my.formula,
eq.with.lhs = "italic(hat(y))~`=`~",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
geom_point()
p
p
library(ggplot2)
library(ggpmisc)
df <- data.frame(x = c(1:100))
df$y <- 2 + 3 * df$x + rnorm(100, sd = 40)
my.formula <- y ~ x
p <- ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = my.formula) +
stat_poly_eq(formula = my.formula,
eq.with.lhs = "italic(hat(y))~`=`~",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
geom_point()
p
library(ggpmisc)
install.packages("ggpmisc")
library(ggplot2)
library(ggpmisc)
df <- data.frame(x = c(1:100))
df$y <- 2 + 3 * df$x + rnorm(100, sd = 40)
my.formula <- y ~ x
p <- ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = my.formula) +
stat_poly_eq(formula = my.formula,
eq.with.lhs = "italic(hat(y))~`=`~",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
geom_point()
p
library(ggplot2)
library(ggpmisc)
df <- data.frame(x = c(1:100))
df$y <- 2 + 3 * df$x + rnorm(100, sd = 40)
my.formula <- y ~ x
p <- ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = my.formula) +
stat_poly_eq(formula = my.formula,
eq.with.lhs = "italic(y)~`=`~",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
geom_point()
p
df = data.frame(Goals = c(42.7, 38.1, 33.9, 24.6, 2.3, -1.9, -4.9), Points = c(82, 77, 74, 67, 53, 51, 49))
my.formula <- df$Points ~ df$Goals
p <- ggplot(data = df, aes(x = df$Goals, y = df$Points)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = my.formula) +
stat_poly_eq(formula = my.formula,
eq.with.lhs = "italic(y)~`=`~",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
geom_point()
p
library(ggplot2)
library(ggpmisc)
df = data.frame(Goals = c(42.7, 38.1, 33.9, 24.6, 2.3, -1.9, -4.9), Points = c(82, 77, 74, 67, 53, 51, 49))
my.formula <- df$Points ~ df$Goals
p <- ggplot(data = df, aes(x = df$Goals, y = df$Points)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = my.formula) +
stat_poly_eq(formula = my.formula,
eq.with.lhs = "italic(y)~`=`~",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
geom_point()
p
library(ggplot2)
library(ggpmisc)
df = data.frame(Goals = c(42.7, 38.1, 33.9, 24.6, 2.3, -1.9, -4.9), Points = c(82, 77, 74, 67, 53, 51, 49))
my.formula <- df$Points ~ df$Goals
p <- ggplot(data = df, aes(x = df$Goals, y = df$Points)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = my.formula) +
stat_poly_eq(formula = my.formula,
eq.with.lhs = "italic(y)~`=`~",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
geom_point()
p
library(ggplot2)
lm_eqn <- function(df){
x = df$goals
y = df$points
m <- lm(y ~ x, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
df = data.frame(goals = c(42.7, 38.1, 33.9, 24.6, 2.3, -1.9, -4.9), points = c(82, 77, 74, 67, 53, 51, 49))
p <- ggplot(data = df, aes(x = goals, y = points)) +
geom_smooth(method = "lm", se=FALSE, color="green", formula = y ~ x) +
geom_point() + stat_poly_eq(formula = my.formula,
eq.with.lhs = "italic(y)~`=`~",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE)
p
p1 <- p + geom_text(x = 25, y = 300, label = lm_eqn(df), parse = TRUE)
p1
library(ggplot2)
lm_eqn <- function(df){
x = df$goals
y = df$points
m <- lm(y ~ x, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
df = data.frame(goals = c(42.7, 38.1, 33.9, 24.6, 2.3, -1.9, -4.9), points = c(82, 77, 74, 67, 53, 51, 49))
p <- ggplot(data = df, aes(x = goals, y = points)) +
geom_smooth(method = "lm", se=FALSE, color="green", formula = y ~ x) +
geom_point() + stat_poly_eq(formula = my.formula,
eq.with.lhs = "italic(y)~`=`~",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE)
Points = df$points
Goals = df$goals
my.formula <- Points ~ df$Goals
p <- ggplot(data = df, aes(x = goals, y = points)) +
geom_smooth(method = "lm", se=FALSE, color="green", formula = y ~ x) +
geom_point() + stat_poly_eq(formula = my.formula,
eq.with.lhs = "italic(y)~`=`~",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE)
p
my.formula <- Points ~ Goals
p <- ggplot(data = df, aes(x = goals, y = points)) +
geom_smooth(method = "lm", se=FALSE, color="green", formula = y ~ x) +
geom_point() + stat_poly_eq(formula = my.formula,
eq.with.lhs = "italic(y)~`=`~",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE)
p
my.formula
summary(my.formula)
library(devtools)
source_gist("524eade46135f6348140")
df = data.frame(x = c(1:100))
df$y = 2 + 5 * df$x + rnorm(100, sd = 40)
df$class = rep(1:2,50)
ggplot(data = df, aes(x = x, y = y, label=y)) +
stat_smooth_func(geom="text",method="lm",hjust=0,parse=TRUE) +
geom_smooth(method="lm",se=FALSE) +
geom_point() + facet_wrap(~class)
library(devtools)
source_gist("524eade46135f6348140")
df = data.frame(x = c(1:100))
df$y = 2 + 5 * df$x + rnorm(100, sd = 40)
df$class = rep(1:2,50)
ggplot(data = df, aes(x = x, y = y, label=y)) +
stat_smooth_func(geom="text",method="lm",hjust=0,parse=TRUE) +
geom_smooth(method="lm",se=FALSE) +
geom_point() + facet_wrap(~class)
library(devtools)
source_gist("524eade46135f6348140")
df = data.frame(x = c(1:100))
df$y = 2 + 5 * df$x + rnorm(100, sd = 40)
df$class = rep(1:2,50)
ggplot(data = df, aes(x = x, y = y, label=y)) +
stat_smooth_func(geom="text",method="lm",hjust=0,parse=TRUE) +
geom_smooth(method="lm",se=FALSE) +
geom_point() + facet_wrap(~class)
library(devtools)
install.packages("devtools")
library(devtools)
source_gist("524eade46135f6348140")
df = data.frame(x = c(1:100))
df$y = 2 + 5 * df$x + rnorm(100, sd = 40)
df$class = rep(1:2,50)
ggplot(data = df, aes(x = x, y = y, label=y)) +
stat_smooth_func(geom="text",method="lm",hjust=0,parse=TRUE) +
geom_smooth(method="lm",se=FALSE) +
geom_point() + facet_wrap(~class)
library(ggplot2)
library(devtools)
source_gist("524eade46135f6348140")
df = data.frame(x = c(1:100))
df$y = 2 + 5 * df$x + rnorm(100, sd = 40)
df$class = rep(1:2,50)
ggplot(data = df, aes(x = x, y = y, label=y)) +
stat_smooth_func(geom="text",method="lm",hjust=0,parse=TRUE) +
geom_smooth(method="lm",se=FALSE) +
geom_point() + facet_wrap(~class)
require(ggplot2)
require(plyr)
df <- data.frame(x = c(1:100))
df$y <- 2 + 3 * df$x + rnorm(100, sd = 40)
lm_eqn = function(df){
m = lm(y ~ x, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
df$group <- c(rep(1:2,50))
eq <- ddply(df,.(group),lm_eqn)
p <- ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = y ~ x) +
geom_point()
p1 = p + geom_text(data=eq,aes(x = 25, y = 300,label=V1), parse = TRUE, inherit.aes=FALSE) + facet_grid(group~.)
p1
df = data.frame(Goals = c(42.7, 38.1, 33.9, 24.6, 2.3, -1.9, -4.9), Points = c(82, 77, 74, 67, 53, 51, 49))
lm_eqn = function(df){
m = lm(Goals ~ Points, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
#df$group <- c(rep(1:2,50))
eq <- ddply(df,.(group),lm_eqn)
p <- ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = y ~ x) +
geom_point()
p1 = p + geom_text(data=eq,aes(x = 25, y = 300,label=V1), parse = TRUE, inherit.aes=FALSE) + facet_grid(group~.)
p1
df = data.frame(y = c(42.7, 38.1, 33.9, 24.6, 2.3, -1.9, -4.9), x = c(82, 77, 74, 67, 53, 51, 49))
lm_eqn = function(df){
m = lm(Goals ~ Points, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
#df$group <- c(rep(1:2,50))
eq <- ddply(df,.(group),lm_eqn)
p <- ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = y ~ x) +
geom_point()
p1 = p + geom_text(data=eq,aes(x = 25, y = 300,label=V1), parse = TRUE, inherit.aes=FALSE) + facet_grid(group~.)
p1
df = data.frame(y = c(42.7, 38.1, 33.9, 24.6, 2.3, -1.9, -4.9), x = c(82, 77, 74, 67, 53, 51, 49))
lm_eqn = function(df){
m = lm(Goals ~ Points, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
#df$group <- c(rep(1:2,50))
eq <- ddply(df,.(group),lm_eqn)[[1]]
p <- ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = y ~ x) +
geom_point()
p1 = p + geom_text(data=eq,aes(x = 25, y = 300,label=V1), parse = TRUE, inherit.aes=FALSE) + facet_grid(group~.)
p1
library(ggplot2)
test.data <- structure(list(X1 = c(13, 2, 119, 7, 12, 11, 347, 41, 10, 4, 8, 112, 68, 102, 98, 165, 19, 2, 22, 25, 51), X2 = c(434.022499, 570, 2556, 1284, 457, 5114, 58215.5065, 581, 438, 233, 204, 497865.973, 3171.06517, 34728, 737386, 737386, 8433.52505, 355, 1715, 1715, 3851)), .Names = c("tabr", "edge"), row.names = c(NA, -21L), class = "data.frame")
ggplot (data = test.data, aes(x = log(edge), y = log(tabr))) +
geom_point(shape=1) +
geom_smooth(method=lm, se=FALSE) +
geom_text(aes(x = 7.5, y = 5.5,
label = expression(paste("r"^2, " = 0.585; p < 0.001"))), parse = TRUE)
library(ggplot2)
df <- data.frame(x = c(1:100))
df$y <- 2 + 3 * df$x + rnorm(100, sd = 40)
p <- ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = y ~ x) +
geom_point()
p
lm_eqn <- function(df){
m <- lm(y ~ x, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
p1 <- p + geom_text(x = 25, y = 300, label = lm_eqn(df), parse = TRUE)
library(ggplot2)
df <- data.frame(x = c(1:100))
df$y <- 2 + 3 * df$x + rnorm(100, sd = 40)
p <- ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = y ~ x) +
geom_point()
p
lm_eqn <- function(df){
m <- lm(y ~ x, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
p1 <- p + geom_text(x = 25, y = 300, label = lm_eqn(df), parse = TRUE)
lm_eqn <- function(df){
m <- lm(y ~ x, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
library(ggplot2)
df <- data.frame(x = c(1:100))
df$y <- 2 + 3 * df$x + rnorm(100, sd = 40)
p <- ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = y ~ x) +
geom_point()
p
p1 <- p + geom_text(x = 25, y = 300, label = lm_eqn(df), parse = TRUE)
p1
library(ggplot2)
lm_eqn <- function(df){
m <- lm(y ~ x, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
df <- data.frame(x = c(1:100))
df$y <- 2 + 3 * df$x + rnorm(100, sd = 40)
p <- ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = y ~ x) +
geom_point()
p1 <- p + geom_text(x = 25, y = 300, label = lm_eqn(df), parse = TRUE)
p1
library(ggplot2)
lm_eqn <- function(df){
m <- lm(y ~ x, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
df <- data.frame(x = c(1:100))
df$y <- 2 + 3 * df$x + rnorm(100, sd = 40)
p <- ggplot(data = df) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = y ~ x) +
geom_point()
p1 <- p + geom_text(x = 25, y = 300, label = lm_eqn(df), parse = TRUE)
p1
library(ggplot2)
lm_eqn <- function(df){
m <- lm(y ~ x, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
df <- data.frame(x = c(1:100))
df$y <- 2 + 3 * df$x + rnorm(100, sd = 40)
p <- ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = y ~ x) +
geom_point()
p1 <- p + geom_text(x = 25, y = 300, label = lm_eqn(df), parse = TRUE, inherit.aes = FALSE)
p1
library(ggplot2)
lm_eqn <- function(df){
m <- lm(y ~ x, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
df = data.frame(y = c(42.7, 38.1, 33.9, 24.6, 2.3, -1.9, -4.9), x = c(82, 77, 74, 67, 53, 51, 49))
df$y <- 2 + 3 * df$x + rnorm(100, sd = 40)
p <- ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = y ~ x) +
geom_point()
p1 <- p + geom_text(x = 25, y = 300, label = lm_eqn(df), parse = TRUE, inherit.aes = FALSE)
p1
library(ggplot2)
lm_eqn <- function(df){
m <- lm(y ~ x, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
df = data.frame(x = c(42.7, 38.1, 33.9, 24.6, 2.3, -1.9, -4.9), y = c(82, 77, 74, 67, 53, 51, 49))
df$y <- 2 + 3 * df$x + rnorm(100, sd = 40)
p <- ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = y ~ x) +
geom_point()
p1 <- p + geom_text(x = 25, y = 300, label = lm_eqn(df), parse = TRUE, inherit.aes = FALSE)
p1
set.seed(18)
n=20
x <- runif(n,0,1)
epsilon <- rnorm(n,0,1)
y <- 40 + 2*x + epsilon
bNoIntercept <- solve(crossprod(x))%*%crossprod(x,y)
eNoIntercept <- y - x%*%bNoIntercept
SSE <- crossprod(eNoIntercept)
SST <- crossprod(y - mean(y))
1- SSE/SST
χ
x
crossprod(x)
x
x *x
x
β
b
bNoIntercept
eNoIntercept
set.seed(18)
n=20
x <- runif(n,0,1)
mean(x)
std(x)
sd(x)
epsilon <- rnorm(n,0,1)
mean(epsilon)
sd(epsilon)
crossprod(x)
solve(crossprod(x))
1/6
bNoIntercept
bNoIntercept <- solve(crossprod(x))%*%crossprod(x,y)
y <- 40 + 2*x + epsilon
bNoIntercept <- solve(crossprod(x))%*%crossprod(x,y)
set.seed(18)n=20x <- runif(n,0,1)epsilon <- rnorm(n,0,1)y <- 40 + 2*x + epsilonbNoIntercept <- solve(crossprod(x))%*%crossprod(x,y)eNoIntercept <- y - x%*%bNoInterceptSSE <- crossprod(eNoIntercept)SST <- crossprod(y - mean(y))1- SSE/SST
set.seed(18)
n=20
x <- runif(n,0,1)
epsilon <- rnorm(n,0,1)
y <- 40 + 2*x + epsilon
bNoIntercept <- solve(crossprod(x))%*%crossprod(x,y)
eNoIntercept <- y - x%*%bNoIntercept
mean(y)
y
x%*%bNoIntercept
plot(x%*%bNoIntercept)
1- SSE/SST
SSE <- crossprod(eNoIntercept)
SST <- crossprod(y - mean(y))
1- SSE/SST
# y = 40 + 2 x + \epsilon
set.seed(18)
n=20
x <- runif(n,0,1)
epsilon <- rnorm(n,0,1)
y <- 40 + 2*x + epsilon
bNoIntercept <- solve(crossprod(x))%*%crossprod(x,y)
eNoIntercept <- y - x%*%bNoIntercept - 40
SSE <- crossprod(eNoIntercept)
SST <- crossprod(y - mean(y))
1- SSE/SST
install.packages("slam")
biocLite("ROI")
source("https://bioconductor.org/biocLite.R")
biocLite("ROI")
setRepositories()
ap <- available.packages()
"slma" %in% rownames(ap)
"slam" %in% rownames(ap)
ap["slam", "Depends"]
"ROI" %in% rownames(ap)
R
version
setwd("~/Dropbox/FBD")
